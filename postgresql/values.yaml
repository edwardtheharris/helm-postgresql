# Default values for postgresql.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
affinity: {}
autoscaling:
  enabled: false
  maxReplicas: 100
  minReplicas: 1
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

fullnameOverride: ""
image:
  pullPolicy: IfNotPresent
  repository: postgresql
  # Overrides the image tag whose default is the chart appVersion.
  tag: "14-alpine"

imagePullSecrets: []
ingress:
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  className: ""
  enabled: false
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

livenessProbe:
  exec:
    command:
    - pg_isready
    - -U
    - postgres
  failureThreshold: 3       # When to give up and restart the container
  initialDelaySeconds: 30  # Delay before the first probe is initiated
  periodSeconds: 10         # How often to perform the probe
  successThreshold: 1       # Minimum consecutive successes for the probe to be considered successful after having failed
  timeoutSeconds: 5         # When the probe times out
nameOverride: ""
nodeSelector: {}
persistence:
  size: 32Gi
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
  # fsGroup: 2000
postgresql:
  database: postgres
readinessProbe:
  exec:
    command:
    - pg_isready
    - -U
    - postgres
  failureThreshold: 3      # When to give up, marking the Pod as Unready
  initialDelaySeconds: 5   # Delay before the first probe is initiated, can be shorter than liveness probe
  periodSeconds: 5         # How often to perform the probe
  successThreshold: 1      # Minimum consecutive successes for the probe to be considered successful
  timeoutSeconds: 1        # When the probe times out
replicaCount: 1
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
service:
  port: 5432
  type: ClusterIP
serviceAccount:
  # Annotations to add to the service account
  annotations: {}
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
tolerations: []
# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true
# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false



