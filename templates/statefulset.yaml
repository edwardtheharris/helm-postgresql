{{ if eq .Values.type "StatefulSet" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.nameOverride }}
  labels:
    {{- include "postgresql.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "postgresql.selectorLabels" . | nindent 6 }}
  serviceName: {{ .Values.nameOverride }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        {{- include "postgresql.labels" . | nindent 8 }}
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 5432
              name: postgres
          env:
            - name: POSTGRES_DB
              value: "{{ .Values.database.name }}"
            - name: POSTGRES_USER
              value: "{{ .Values.database.username }}"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: password
          volumeMounts:
            - name: {{ .Values.nameOverride }}
              mountPath: /var/lib/postgresql/
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: {{ .Values.nameOverride }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.nameOverride }}
      spec:
        accessModes:
          - ReadWriteMany
          - ReadWriteOnce
        resources:
          limits:
            storage: {{ .Values.resources.limits.storage }}
          requests:
            storage: {{ .Values.resources.requests.storage }}
        storageClassName: {{ .Values.persistence.storageClass }}
        volumeMode: Filesystem
{{ end }}
