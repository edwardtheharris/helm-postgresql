###
# ```{rubric} Default values for PostgreSQL deployment
# ```
# ---
# Default values for postgresql. This is a YAML-formatted file.
# Declare variables to be passed into your templates.
#
# ```{literalinclude} values.yaml
# :caption: values.yaml
# :language: yaml
# ```
affinity:
  nodeAffinity:
  requiredDuringSchedulingIgnoredDuringExecution:
    nodeSelectorTerms:
    - matchExpressions:
      - key: kubernetes.io/os
        operator: In
        values:
        - linux
autoscaling:
  enabled: false
  maxReplicas: 3
  minReplicas: 1
  ###
  # targetMemoryUtilizationPercentage: 80
  targetCPUUtilizationPercentage: 80
database:
  username: "postgres"
  password: "postgres"
  name: postgres
fullnameOverride: "postgresql"
image:
  pullPolicy: IfNotPresent
  repository: postgres
  ###
  # Overrides the image tag whose default is the chart appVersion.
  tag: "16-alpine"

imagePullSecrets: []
ingress:
  ###
  # ```{code-block} yaml
  # kubernetes.io/tls-acme: "true"
  # ```
  annotations:
    kubernetes.io/ingress.class: nginx
  className: ""
  enabled: false
  hosts:
  - host: pg.svc.cluster.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  ###
  # ```{code-block} yaml
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  # ```
  tls: []

livenessProbe:
  exec:
    command:
    - pg_isready
    - -U
    - postgres
  ###
  # When to give up and restart the container
  failureThreshold: 3
  ###
  # Delay before the first probe is initiated
  initialDelaySeconds: 30
  ###
  # How often to perform the probe
  periodSeconds: 10
  ###
  # Minimum consecutive successes for the probe to be considered successful
  # after having failed.
  successThreshold: 1
  ###
  # When the probe times out
  timeoutSeconds: 5

###
# ```{rubric} Name Override
# ```
# ---
# Name and node selector config.
#
# ```{literalinclude} /values.yaml
# :language: yaml
# :start-at: "nameOverride: postgresql\n"
# :end-before: "###\n"
# ```
nameOverride: postgresql
nodeSelector:
  kubernetes.io/os: linux

###
# ```{code-block} yaml
# fsGroup: 2000
# ```
persistence:
  claim:
    enabled: false
  name: postgresql
  size: 50Gi
  storageClass: csi-lvm-linear
podAnnotations: {}
podLabels:
  app: postgresql
podSecurityContext: {}

readinessProbe:
  exec:
    command:
    - pg_isready
    - -U
    - postgres
  ###
  # When to give up, marking the Pod as Unready
  failureThreshold: 3
  ###
  # Delay before the first probe is initiated, can be shorter than
  # liveness probe
  initialDelaySeconds: 5
  ###
  # How often to perform the probe
  periodSeconds: 5
  ###
  # Minimum consecutive successes for the probe to be considered successful
  successThreshold: 1
  ###
  # When the probe times out
  timeoutSeconds: 1
replicaCount: 1

###
# We usually recommend not to specify default resources and to leave this as
# a conscious choice for the user. This also increases chances charts run
# on environments with little resources, such as Minikube. If you do want to
# specify resources, uncomment the following lines, adjust them as necessary,
# and remove the curly braces after `resources:`{l=yaml}.
#
# ```{code-block} yaml
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128M
# ```
resources:
  limits:
    cpu: 1
    memory: 2048Mi
    storage: 100Gi
  requests:
    cpu: 500m
    memory: 1024Mi
    storage: 50Gi

###
# ```{code-block} yaml
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000
# ```
securityContext: {}
service:
  port: 5432
  type: ClusterIP

###
# Additional volumeMounts on the output Deployment definition.
#
# ```{code-block} yaml
# - mountPath: "/mnt/local/psql"
#   name: data
#   readOnly: false
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true
# ```
serviceAccount:
  ###
  # Annotations to add to the service account
  annotations:
    serviceaccount.kubernetes.io/name: postgres
  ###
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  ###
  # Specifies whether a service account should be created
  create: true
  ###
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the
  # fullname template
  name: "postgresql"
tolerations: []
type: StatefulSet

###
# Additional volumeMounts on the output Deployment definition.
#
# ```{code-block} yaml
# - mountPath: "/mnt/local/psql"
#   name: data
#   readOnly: false
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true
# ```
volumeMounts: []

###
# Additional volumes on the output Deployment definition.
#
# ```{code-block} yaml
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false
# ```
volumes: []



